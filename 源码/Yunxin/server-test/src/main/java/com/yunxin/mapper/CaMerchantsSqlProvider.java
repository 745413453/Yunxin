package com.yunxin.mapper;

import com.yunxin.entity.CaMerchants;
import com.yunxin.entity.CaMerchantsExample;
import com.yunxin.entity.CaMerchantsExample.Criteria;
import com.yunxin.entity.CaMerchantsExample.Criterion;

import java.util.List;
import java.util.Map;

import static org.apache.ibatis.jdbc.SqlBuilder.*;

public class CaMerchantsSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String countByExample(CaMerchantsExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("CA_Merchants");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String deleteByExample(CaMerchantsExample example) {
        BEGIN();
        DELETE_FROM("CA_Merchants");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String insertSelective(CaMerchants record) {
        BEGIN();
        INSERT_INTO("CA_Merchants");
        
        if (record.getMerid() != null) {
            VALUES("MerId", "#{merid,jdbcType=VARCHAR}");
        }
        
        if (record.getMerchantname() != null) {
            VALUES("MerchantName", "#{merchantname,jdbcType=NVARCHAR}");
        }
        
        if (record.getSecretkey() != null) {
            VALUES("SecretKey", "#{secretkey,jdbcType=VARCHAR}");
        }
        
        if (record.getPublickey() != null) {
            VALUES("PublicKey", "#{publickey,jdbcType=NVARCHAR}");
        }
        
        if (record.getDatacreatetime() != null) {
            VALUES("DataCreateTime", "#{datacreatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDatalastchangetime() != null) {
            VALUES("DataLastChangeTime", "#{datalastchangetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getValidatedrequestipaddress() != null) {
            VALUES("ValidatedRequestIPAddress", "#{validatedrequestipaddress,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String selectByExample(CaMerchantsExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("MerId");
        } else {
            SELECT("MerId");
        }
        SELECT("MerchantName");
        SELECT("SecretKey");
        SELECT("PublicKey");
        SELECT("DataCreateTime");
        SELECT("DataLastChangeTime");
        SELECT("ValidatedRequestIPAddress");
        FROM("CA_Merchants");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        CaMerchants record = (CaMerchants) parameter.get("record");
        CaMerchantsExample example = (CaMerchantsExample) parameter.get("example");
        
        BEGIN();
        UPDATE("CA_Merchants");
        
        if (record.getMerid() != null) {
            SET("MerId = #{record.merid,jdbcType=VARCHAR}");
        }
        
        if (record.getMerchantname() != null) {
            SET("MerchantName = #{record.merchantname,jdbcType=NVARCHAR}");
        }
        
        if (record.getSecretkey() != null) {
            SET("SecretKey = #{record.secretkey,jdbcType=VARCHAR}");
        }
        
        if (record.getPublickey() != null) {
            SET("PublicKey = #{record.publickey,jdbcType=NVARCHAR}");
        }
        
        if (record.getDatacreatetime() != null) {
            SET("DataCreateTime = #{record.datacreatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDatalastchangetime() != null) {
            SET("DataLastChangeTime = #{record.datalastchangetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getValidatedrequestipaddress() != null) {
            SET("ValidatedRequestIPAddress = #{record.validatedrequestipaddress,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("CA_Merchants");
        
        SET("MerId = #{record.merid,jdbcType=VARCHAR}");
        SET("MerchantName = #{record.merchantname,jdbcType=NVARCHAR}");
        SET("SecretKey = #{record.secretkey,jdbcType=VARCHAR}");
        SET("PublicKey = #{record.publickey,jdbcType=NVARCHAR}");
        SET("DataCreateTime = #{record.datacreatetime,jdbcType=TIMESTAMP}");
        SET("DataLastChangeTime = #{record.datalastchangetime,jdbcType=TIMESTAMP}");
        SET("ValidatedRequestIPAddress = #{record.validatedrequestipaddress,jdbcType=VARCHAR}");
        
        CaMerchantsExample example = (CaMerchantsExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    public String updateByPrimaryKeySelective(CaMerchants record) {
        BEGIN();
        UPDATE("CA_Merchants");
        
        if (record.getMerchantname() != null) {
            SET("MerchantName = #{merchantname,jdbcType=NVARCHAR}");
        }
        
        if (record.getSecretkey() != null) {
            SET("SecretKey = #{secretkey,jdbcType=VARCHAR}");
        }
        
        if (record.getPublickey() != null) {
            SET("PublicKey = #{publickey,jdbcType=NVARCHAR}");
        }
        
        if (record.getDatacreatetime() != null) {
            SET("DataCreateTime = #{datacreatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDatalastchangetime() != null) {
            SET("DataLastChangeTime = #{datalastchangetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getValidatedrequestipaddress() != null) {
            SET("ValidatedRequestIPAddress = #{validatedrequestipaddress,jdbcType=VARCHAR}");
        }
        
        WHERE("MerId = #{merid,jdbcType=VARCHAR}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CA_Merchants
     *
     * @mbggenerated Thu Mar 02 13:37:03 CST 2017
     */
    protected void applyWhere(CaMerchantsExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}